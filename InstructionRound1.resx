<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="richTextBox1.Text" xml:space="preserve">
    <value>Có 4 từ hàng ngang, cũng chính là 4 gợi ý liên quan đến Chướng ngại vật mà các thí sinh phải đi tìm.

Có 1 hình ảnh với 5 miếng ghép. 4 miếng ghép tương ứng với 4 từ hàng ngang ở 4 góc và được đánh số cố định, 1 miếng ghép ở ô trung tâm và cũng là gợi ý cuối cùng.

Mỗi thí sinh có tối đa 1 lượt lựa chọn để chọn trả lời một trong các từ hàng ngang này, bắt đầu từ thí sinh ở vị trí số 1. Thời gian suy nghĩ cho mỗi từ hàng ngang là 15 giây. Trả lời đúng được 10 điểm.

Nếu 1 thí sinh trước khi lựa chọn từ hàng ngang mà bấm chuông trả lời Chướng ngại vật và bị loại, thí sinh ở vị trí tiếp theo sẽ được lựa chọn từ hàng ngang. Trong trường hợp này, đối với các thí sinh chưa bị loại, nếu thí sinh ở vị trí cuối cùng hoàn thành lượt lựa chọn từ hàng ngang mà vẫn còn từ hàng ngang chưa được lựa chọn, lượt lựa chọn sẽ quay trở lại với thí sinh ở vị trí số 1.

Câu trả lời mà thí sinh đưa ra yêu cầu phải đúng chính tả. Nếu có bất kỳ sai sót về kí tự, dấu câu, ngữ pháp, câu trả lời của thí sinh đó sẽ không được công nhận.

Sau khi trả lời đúng từ hàng ngang, miếng ghép tương ứng với số thứ tự của từ hàng ngang đó sẽ được mở ra. Nếu không trả lời được từ hàng ngang, miếng ghép tương ứng với số thứ tự của từ hàng ngang đó sẽ không được mở ra.

Thí sinh có thể bấm chuông trả lời Chướng ngại vật bất cứ lúc nào. Trả lời đúng Chướng ngại vật trong 1 từ hàng ngang đầu tiên được 50 điểm, trong 2 từ hàng ngang được 40 điểm, trong 3 từ hàng ngang được 30 điểm, trong 4 từ hàng được 20 điểm.
i đúng câu hỏi ở ô trung tâm được 10 điểm, trả lời sai thì ô trung tâm sẽ không được mở ra. Các thí sinh sẽ có 15 giây suy nghĩ để đưa ra Chướng ngại vật. Trả lời đúng Chướng ngại vật sau gợi ý cuối cùng ở ô trung tâm chỉ được 10 điểm.

Nếu trả lời sai Chướng ngại vật, thí sinh sẽ bị loại khỏi phần thi này.</value>
  </data>
</root>